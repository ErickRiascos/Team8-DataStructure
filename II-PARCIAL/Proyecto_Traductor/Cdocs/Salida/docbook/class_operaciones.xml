<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_operaciones" xml:lang="es">
<title>Referencia de la Clase Operaciones</title>
<indexterm><primary>Operaciones</primary></indexterm>
<simplesect>
    <title>Métodos públicos    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_operaciones_1a1ba55d6d55c967b367f134720df7ccaa">mover_nodos_hijos</link> (<link linkend="_class_nodo">Nodo</link> *&amp;, <link linkend="_class_nodo">Nodo</link> *&amp;)</para>
</listitem>
            <listitem><para>int <link linkend="_class_operaciones_1a571dfa04a3795bc5cad5aa261777eeed">get_posicion_corte</link> (<link linkend="_class_nodo">Nodo</link> *, std::string)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_operaciones_1adc06ecd9a0ab8bf48515064de7dd9815">hoja_izquierda</link> (<link linkend="_class_nodo">Nodo</link> *)</para>
</listitem>
            <listitem><para><link linkend="_class_nodo">Nodo</link> * <link linkend="_class_operaciones_1adff4e9771ada35afab7ca23d50d4aa2a">dividir_nodos</link> (<link linkend="_class_nodo">Nodo</link> *&amp;, std::string, int)</para>
</listitem>
            <listitem><para><link linkend="_class_nodo">Nodo</link> * <link linkend="_class_operaciones_1a8bfb8a0106c03e56fd3fe054025c1838">insertar</link> (std::string, <link linkend="_class_nodo">Nodo</link> *&amp;)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_operaciones_1a5dc4c8c065cb4099ae55bf62729852e5">buscar</link> (<link linkend="_class_nodo">Nodo</link> *, std::string)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_operaciones_1aed63bbb152470192aca0baa0e70c9bdf">eliminar</link> (<link linkend="_class_nodo">Nodo</link> *, std::string)</para>
</listitem>
            <listitem><para>void <link linkend="_class_operaciones_1a88ce18ce0ddf7e1b5e94eb68d692c659">imprimir</link> (<link linkend="_class_nodo">Nodo</link> *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_operaciones_1ad4e2cfc7fb0a154716b890d45b4683d6">setSufijo</link> (std::string)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Atributos públicos    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_operaciones_1ad7c871232e7665180df08f6dadd5d086"/>int <emphasis role="strong">pos</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Documentación de las funciones miembro</title>
<anchor xml:id="_class_operaciones_1a5dc4c8c065cb4099ae55bf62729852e5"/>    <section>
    <title>buscar()</title>
<indexterm><primary>buscar</primary><secondary>Operaciones</secondary></indexterm>
<indexterm><primary>Operaciones</primary><secondary>buscar</secondary></indexterm>
<para><computeroutput>bool Operaciones::buscar (<link linkend="_class_nodo">Nodo</link> * raiz, std::string palabra)</computeroutput></para>
<para>La función &quot;buscar&quot; realiza la busqueda de una palabra en el arbol </para>
    </section><anchor xml:id="_class_operaciones_1adff4e9771ada35afab7ca23d50d4aa2a"/>    <section>
    <title>dividir_nodos()</title>
<indexterm><primary>dividir_nodos</primary><secondary>Operaciones</secondary></indexterm>
<indexterm><primary>Operaciones</primary><secondary>dividir_nodos</secondary></indexterm>
<para><computeroutput><link linkend="_class_nodo">Nodo</link> * Operaciones::dividir_nodos (<link linkend="_class_nodo">Nodo</link> *&amp; raiz, std::string izq, int pos)</computeroutput></para>
<para>La función &quot;dividir_nodos&quot; realiza la division de nodos cuando existe una repeticion de caracteres </para>
    </section><anchor xml:id="_class_operaciones_1aed63bbb152470192aca0baa0e70c9bdf"/>    <section>
    <title>eliminar()</title>
<indexterm><primary>eliminar</primary><secondary>Operaciones</secondary></indexterm>
<indexterm><primary>Operaciones</primary><secondary>eliminar</secondary></indexterm>
<para><computeroutput>bool Operaciones::eliminar (<link linkend="_class_nodo">Nodo</link> * raiz, std::string palabra)</computeroutput></para>
<para>La función &quot;eliminar&quot; realiza la eliminacion de una palabra al arbol </para>
    </section><anchor xml:id="_class_operaciones_1a571dfa04a3795bc5cad5aa261777eeed"/>    <section>
    <title>get_posicion_corte()</title>
<indexterm><primary>get_posicion_corte</primary><secondary>Operaciones</secondary></indexterm>
<indexterm><primary>Operaciones</primary><secondary>get_posicion_corte</secondary></indexterm>
<para><computeroutput>int Operaciones::get_posicion_corte (<link linkend="_class_nodo">Nodo</link> * aux, std::string key)</computeroutput></para>
<para>La función &quot;get_posicion_corte&quot; obtiene el punto en el que el la palabra se tiene que cortar para formar otro nodo </para>
    </section><anchor xml:id="_class_operaciones_1adc06ecd9a0ab8bf48515064de7dd9815"/>    <section>
    <title>hoja_izquierda()</title>
<indexterm><primary>hoja_izquierda</primary><secondary>Operaciones</secondary></indexterm>
<indexterm><primary>Operaciones</primary><secondary>hoja_izquierda</secondary></indexterm>
<para><computeroutput>bool Operaciones::hoja_izquierda (<link linkend="_class_nodo">Nodo</link> * raiz)</computeroutput></para>
<para>La función &quot;hoja_izquierda&quot; obtiene el dato si existe o no una hoja a la izquierda </para>
    </section><anchor xml:id="_class_operaciones_1a88ce18ce0ddf7e1b5e94eb68d692c659"/>    <section>
    <title>imprimir()</title>
<indexterm><primary>imprimir</primary><secondary>Operaciones</secondary></indexterm>
<indexterm><primary>Operaciones</primary><secondary>imprimir</secondary></indexterm>
<para><computeroutput>void Operaciones::imprimir (<link linkend="_class_nodo">Nodo</link> * raiz)</computeroutput></para>
<para>La función &quot;imprimir&quot; realiza la impresion de las palabras que constan en el arbol </para>
    </section><anchor xml:id="_class_operaciones_1a8bfb8a0106c03e56fd3fe054025c1838"/>    <section>
    <title>insertar()</title>
<indexterm><primary>insertar</primary><secondary>Operaciones</secondary></indexterm>
<indexterm><primary>Operaciones</primary><secondary>insertar</secondary></indexterm>
<para><computeroutput><link linkend="_class_nodo">Nodo</link> * Operaciones::insertar (std::string key, <link linkend="_class_nodo">Nodo</link> *&amp; raiz)</computeroutput></para>
<para>La función &quot;insertar&quot; realiza la insercion de una palabra al arbol </para>
    </section><anchor xml:id="_class_operaciones_1a1ba55d6d55c967b367f134720df7ccaa"/>    <section>
    <title>mover_nodos_hijos()</title>
<indexterm><primary>mover_nodos_hijos</primary><secondary>Operaciones</secondary></indexterm>
<indexterm><primary>Operaciones</primary><secondary>mover_nodos_hijos</secondary></indexterm>
<para><computeroutput>void Operaciones::mover_nodos_hijos (<link linkend="_class_nodo">Nodo</link> *&amp; raiz, <link linkend="_class_nodo">Nodo</link> *&amp; aux)</computeroutput></para>
<para>La función &quot;Mover_Nodos_hijos&quot; realiza el cambio de nodos cuando una palabra se segmenta en otras </para>
    </section><anchor xml:id="_class_operaciones_1ad4e2cfc7fb0a154716b890d45b4683d6"/>    <section>
    <title>setSufijo()</title>
<indexterm><primary>setSufijo</primary><secondary>Operaciones</secondary></indexterm>
<indexterm><primary>Operaciones</primary><secondary>setSufijo</secondary></indexterm>
<para><computeroutput>void Operaciones::setSufijo (std::string a)</computeroutput></para>
<para>La función &quot;setSufijo&quot; obtiene el dato Sufijo </para>
</section>
<para>
La documentación para esta clase fue generada a partir de los siguientes ficheros:</para>
C:/Users/LENOVO/Desktop/Proyecto_Traductor/Proyecto_Traductor/Operaciones.hC:/Users/LENOVO/Desktop/Proyecto_Traductor/Proyecto_Traductor/Operaciones.cpp</section>
</section>
